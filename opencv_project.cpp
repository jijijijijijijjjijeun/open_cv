extern void show_code02_02();
extern void show_code02_03();
extern void show_code03_07();
extern void show_code03_08();
extern void show_code03_09();
extern void show_code03_10();
extern void show_code03_11();
extern void show_code03_12();
extern void show_camera();
extern void show_movie();
extern void show_video_record();
extern void show_draw_lines();
extern void show_draw_polygons();
extern void show_draw_text();
extern void show_draw_center();
extern void keyboard_event();
extern void mouse_event();
extern void trackbar_event();
extern void on_level_changed();
extern void mask_setTo();
extern void mask_copyTo();
extern void time_inverse();
extern void example();
extern void brightness();
extern void brightness2();
extern void brightness3();
extern void show_hit();
extern void histogram_stretching();
extern void operating();
extern void arithmetic1();
extern void arithmetic2();
extern void logical();
extern void filter_embossing();
extern void filter_blurring();
extern void filter_gaussian();
extern void filter_unsharp_mask();
extern void noise_gaussian();
extern void filter_bilateral();
extern void filter_meian();
extern void affine_transform();
extern void affine_translation();
extern void affine_shear();
extern void affine_resize();
extern void affine_roation();
extern void affine_flip();
extern void perspective();
extern void sobel_edge();
extern void canny_edge();
extern void hough_lines();
extern void hough_lines_segments();
extern void hough_circles();
extern void color_inverse();
extern void color_grayscale();
extern void color_split();
extern void color_equalizerHist();
extern void using_inRange();
extern void using_threshold();
extern void adaptie_threshold();
extern void erode_dilate();
extern void open_close();
extern void detect_edge_by_mouse();
extern void labeling_basic();
extern void eeeex_1();
extern void labeling_stats();
extern void contours_hier();
extern void find_polygon();
extern void template_matching(); 
extern void detect_face();
extern void do_knn_maching_learning();
extern void detect_dnn_face();
extern void detect_dnn_face1();
extern void a();

//int main()//"lenna.bmp" "Lenna1.png"
//{	//cv::waitKey(0);
//	//cv::destroyAllWindows();
//	
//	/*show_code02_02();
//	show_code02_03();
//	show_code03_08();
//	show_code03_09();
//	show_code03_10();
//	show_code03_11();
//	show_code03_12();
//	show_camera();
//	show_movie();
//	show_video_record();
//	show_draw_lines();
//	show_draw_polygons();
//	show_draw_text();
//	show_draw_center();
//	keyboard_event();
//	mouse_event();
//	trackbar_event();
//	mask_setTo();
//	mask_copyTo();
//	time_inverse();
//	example();
//	brightness();
//	brightness2();
//	brightness3();
//	show_hit();
//	histogram_stretching();
//	operating();
//	arithmetic1();
//	arithmetic2();
//	logical();
//	filter_embossing();
//	filter_blurring();
//	filter_gaussian();
//	filter_unsharp_mask();
//	noise_gaussian();
//	filter_bilateral();
//	filter_meian();
//	affine_transform();
//	affine_translation();
//	affine_shear();
//	affine_resize();
//	affine_roation();
//	affine_flip();
//	perspective();
//	sobel_edge();
//	canny_edge();
//	hough_lines();
//	hough_lines_segments();
//	hough_circles();
//	color_inverse();
//	color_grayscale();
//	color_split();
//	color_equalizerHist();
//	using_inRange();
//	using_threshold();
//	adaptie_threshold();
//	erode_dilate();
//	open_close();
//	detect_edge_by_mouse();
//	labeling_basic();
//	eeeex_1();
//	labeling_stats();
//	contours_hier();
//	find_polygon();
//	template_matching();
//	detect_face();
//	do_knn_maching_learning();*/
//	//detect_dnn_face();
//	//detect_dnn_face1();
//	a();
//	return 0;
//}